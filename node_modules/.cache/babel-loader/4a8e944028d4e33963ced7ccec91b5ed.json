{"ast":null,"code":"var _jsxFileName = \"/home/yurcik45/Desktop/starwars/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from \"@apollo/client\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ALL_USERS = gql`\n    {\n      users {\n        name\n        id\n        rocket\n        timestamp\n        twitter\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_USERS);\n\n  if (loading) {\n    console.log(\"loading...\");\n  }\n\n  if (error) {\n    console.log(\"error\", error);\n  }\n\n  if (data) {\n    console.log(\"data\", data);\n  }\n\n  require('isomorphic-fetch');\n\n  fetch('https://api.spacex.land/graphql/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n    query {\n      todos {\n        edges {\n          node {\n            completed\n            id\n            text\n          }\n\t}\n      }\n    }`\n    })\n  }).then(res => res.json()).then(res => console.log(res.data));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yurcik45/Desktop/starwars/src/App.js"],"names":["useQuery","gql","App","ALL_USERS","loading","error","data","console","log","require","fetch","method","headers","body","JSON","stringify","query","then","res","json"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,SAAS,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVE;AAWA,QAAM;AAACG,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACG,SAAD,CAAvC;;AAEA,MAAIC,OAAJ,EAAa;AAAEG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAA4B;;AAC3C,MAAIH,KAAJ,EAAW;AAAEE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AAA8B;;AAC3C,MAAIC,IAAJ,EAAU;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AAA4B;;AAExCG,EAAAA,OAAO,CAAC,kBAAD,CAAP;;AAEFC,EAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF+B;AAGxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXuB,KAAf;AAHkC,GAArC,CAAL,CAiBCC,IAjBD,CAiBMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAjBb,EAkBCF,IAlBD,CAkBMC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACZ,IAAhB,CAlBb;AAoBE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA5CD;;GAAMJ,G;UAa2BF,Q;;;KAb3BE,G;AA8CN,eAAeA,GAAf","sourcesContent":["import { useQuery, gql } from \"@apollo/client\"\nimport './App.css';\n\nconst App = () => {\n\n  const ALL_USERS = gql`\n    {\n      users {\n        name\n        id\n        rocket\n        timestamp\n        twitter\n      }\n    }\n  `\n  const {loading, error, data} = useQuery(ALL_USERS)\n\n  if (loading) { console.log(\"loading...\"); }\n  if (error) { console.log(\"error\", error); }\n  if (data) { console.log(\"data\", data); }\n\n  require('isomorphic-fetch');\n\nfetch('https://api.spacex.land/graphql/', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ query: `\n    query {\n      todos {\n        edges {\n          node {\n            completed\n            id\n            text\n          }\n\t}\n      }\n    }` \n  }),\n})\n.then(res => res.json())\n.then(res => console.log(res.data));\n\n  return (\n    <div>App</div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}